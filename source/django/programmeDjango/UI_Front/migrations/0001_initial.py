# Generated by Django 3.2 on 2022-04-04 15:28

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Argument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('value', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=256)),
                ('abstract', models.CharField(max_length=4096)),
                ('full_text', models.TextField()),
                ('publication', models.DateField()),
                ('url_file', models.URLField(null=True)),
                ('is_file_get', models.BooleanField(default=False)),
                ('pmcid', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=128)),
                ('first_name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('research', 'Research'), ('filter', 'Filter'), ('final_file', 'Final_file')], max_length=64)),
                ('is_running', models.BooleanField(default=False)),
                ('is_error', models.BooleanField(default=False)),
                ('error', models.CharField(default='', max_length=256)),
                ('date', models.DateField(default=datetime.date.today)),
                ('last_check', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_ready', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Research',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search', models.CharField(max_length=256)),
                ('year_begin', models.DateField()),
                ('year_end', models.DateField()),
                ('step', models.CharField(choices=[('article', 'Article'), ('processing', 'Processing'), ('clustering', 'Clustering')], default='article', max_length=64)),
                ('is_finish', models.BooleanField(default=False)),
                ('is_error', models.BooleanField(default=False)),
                ('error', models.CharField(default='', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Research_Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UI_Front.article')),
                ('research', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UI_Front.research')),
            ],
        ),
        migrations.AddField(
            model_name='research',
            name='articles',
            field=models.ManyToManyField(through='UI_Front.Research_Article', to='UI_Front.Article'),
        ),
        migrations.AddField(
            model_name='research',
            name='request',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='UI_Front.request'),
        ),
        migrations.CreateModel(
            name='Request_Argument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('argument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UI_Front.argument')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UI_Front.request')),
            ],
        ),
        migrations.AddField(
            model_name='request',
            name='arguments',
            field=models.ManyToManyField(through='UI_Front.Request_Argument', to='UI_Front.Argument'),
        ),
        migrations.AddField(
            model_name='request',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Preproc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.FloatField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UI_Front.article')),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UI_Front.keyword')),
                ('research', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UI_Front.research')),
            ],
        ),
        migrations.AddField(
            model_name='keyword',
            name='research',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UI_Front.research'),
        ),
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=1024)),
                ('pos_x', models.IntegerField()),
                ('pos_y', models.IntegerField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UI_Front.article')),
                ('research', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UI_Front.research')),
            ],
        ),
        migrations.CreateModel(
            name='Article_Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UI_Front.article')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UI_Front.author')),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='author',
            field=models.ManyToManyField(through='UI_Front.Article_Author', to='UI_Front.Author'),
        ),
    ]
